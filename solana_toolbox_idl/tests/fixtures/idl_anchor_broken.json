{
  "address": "",
  "metadata": {
    "name": "psyche_solana_coordinator",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "free_coordinator",
      "discriminator": [89, 216, 215, 229, 223, 242, 74, 32],
      "accounts": [
        {
          "name": "instance",
          "writable": true
        },
        {
          "name": "account",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "health_check",
      "discriminator": [115, 90, 99, 168, 138, 18, 157, 131],
      "accounts": [
        {
          "name": "instance"
        },
        {
          "name": "account",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "committee",
          "type": {
            "defined": {
              "name": "Committee"
            }
          }
        },
        {
          "name": "position",
          "type": "u64"
        },
        {
          "name": "index",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize_coordinator",
      "discriminator": [81, 123, 21, 43, 27, 11, 238, 2],
      "accounts": [
        {
          "name": "instance",
          "writable": true
        },
        {
          "name": "account",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "run_id",
          "type": "string"
        }
      ]
    },
    {
      "name": "join_run",
      "discriminator": [72, 160, 125, 102, 106, 134, 246, 75],
      "accounts": [
        {
          "name": "instance"
        },
        {
          "name": "account",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "id",
          "type": {
            "defined": {
              "name": "ClientId"
            }
          }
        }
      ]
    },
    {
      "name": "set_paused",
      "discriminator": [91, 60, 125, 192, 176, 225, 166, 218],
      "accounts": [
        {
          "name": "instance"
        },
        {
          "name": "account",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "paused",
          "type": "bool"
        }
      ]
    },
    {
      "name": "set_whitelist",
      "discriminator": [69, 161, 114, 252, 244, 66, 197, 48],
      "accounts": [
        {
          "name": "instance"
        },
        {
          "name": "account",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "clients",
          "type": {
            "vec": "pubkey"
          }
        }
      ]
    },
    {
      "name": "tick",
      "discriminator": [92, 79, 44, 8, 101, 80, 63, 15],
      "accounts": [
        {
          "name": "instance"
        },
        {
          "name": "account",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "update_coordinator_config_model",
      "discriminator": [36, 145, 217, 143, 32, 109, 168, 218],
      "accounts": [
        {
          "name": "instance"
        },
        {
          "name": "account",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "config",
          "type": {
            "option": {
              "defined": {
                "name": "CoordinatorConfig",
                "generics": [
                  {
                    "kind": "type",
                    "type": {
                      "defined": {
                        "name": "ClientId"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "name": "model",
          "type": {
            "option": {
              "defined": {
                "name": "Model"
              }
            }
          }
        }
      ]
    },
    {
      "name": "witness",
      "discriminator": [213, 244, 149, 25, 142, 223, 21, 39],
      "accounts": [
        {
          "name": "instance"
        },
        {
          "name": "account",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "proof",
          "type": {
            "defined": {
              "name": "WitnessProof"
            }
          }
        },
        {
          "name": "participant_bloom",
          "type": {
            "defined": {
              "name": "Bloom16_8"
            }
          }
        },
        {
          "name": "order_bloom",
          "type": {
            "defined": {
              "name": "Bloom16_8"
            }
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "CoordinatorAccount",
      "discriminator": [239, 33, 177, 55, 44, 155, 86, 43]
    },
    {
      "name": "CoordinatorInstance",
      "discriminator": [156, 9, 153, 16, 175, 24, 31, 252]
    }
  ],
  "types": [
    {
      "name": "BitArrayWrapper16",
      "docs": ["A wrapper around BitArray for serialization"],
      "repr": {
        "kind": "transparent"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "0",
            "docs": ["The underlying bit array"],
            "type": {
              "array": ["u64", 16]
            }
          }
        ]
      }
    },
    {
      "name": "Bloom16_8",
      "docs": [
        "A Bloom filter implementation with configurable size and number of hash functions"
      ],
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "keys",
            "docs": ["Hash function keys"],
            "type": {
              "array": ["u64", 8]
            }
          },
          {
            "name": "bits",
            "docs": ["Bit array for the Bloom filter"],
            "type": {
              "defined": {
                "name": "BitArrayWrapper16"
              }
            }
          }
        ]
      }
    },
    {
      "name": "Checkpoint",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Dummy"
          },
          {
            "name": "Ephemeral"
          },
          {
            "name": "Hub",
            "fields": [
              {
                "defined": {
                  "name": "HubRepo"
                }
              }
            ]
          },
          {
            "name": "P2P",
            "fields": [
              {
                "defined": {
                  "name": "HubRepo"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "ClientId",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "signer",
            "type": "pubkey"
          },
          {
            "name": "p2p_identity",
            "type": {
              "array": ["u8", 32]
            }
          }
        ]
      }
    },
    {
      "name": "ClientState",
      "repr": {
        "kind": "rust"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Healthy"
          },
          {
            "name": "Dropped"
          },
          {
            "name": "Withdrawn"
          },
          {
            "name": "Ejected"
          }
        ]
      }
    },
    {
      "name": "ClientsState",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "whitelist",
            "type": {
              "defined": {
                "name": "FixedVec",
                "generics": [
                  {
                    "kind": "type",
                    "type": "pubkey"
                  },
                  {
                    "kind": "const",
                    "value": "64"
                  }
                ]
              }
            }
          },
          {
            "name": "clients",
            "type": {
              "defined": {
                "name": "FixedVec",
                "generics": [
                  {
                    "kind": "type",
                    "type": {
                      "defined": {
                        "name": "psyche_solana_coordinator::client::Client"
                      }
                    }
                  },
                  {
                    "kind": "const",
                    "value": "64"
                  }
                ]
              }
            }
          },
          {
            "name": "next_active",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "Committee",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "TieBreaker"
          },
          {
            "name": "Verifier"
          },
          {
            "name": "Trainer"
          }
        ]
      }
    },
    {
      "name": "ConstantLR",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "base_lr",
            "type": "f32"
          },
          {
            "name": "warmup_steps",
            "type": "u32"
          },
          {
            "name": "warmup_init_lr",
            "type": "f32"
          }
        ]
      }
    },
    {
      "name": "Coordinator",
      "repr": {
        "kind": "c"
      },
      "generics": [
        {
          "kind": "type",
          "name": "T"
        }
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "run_id",
            "type": {
              "array": ["u8", 64]
            }
          },
          {
            "name": "run_state",
            "type": {
              "defined": {
                "name": "RunState"
              }
            }
          },
          {
            "name": "model",
            "type": {
              "defined": {
                "name": "Model"
              }
            }
          },
          {
            "name": "config",
            "type": {
              "defined": {
                "name": "CoordinatorConfig",
                "generics": [
                  {
                    "kind": "type",
                    "type": {
                      "generic": "T"
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "progress",
            "type": {
              "defined": {
                "name": "CoordinatorProgress"
              }
            }
          },
          {
            "name": "prev_epoch_progress",
            "type": {
              "defined": {
                "name": "CoordinatorProgress"
              }
            }
          },
          {
            "name": "epoch_state",
            "type": {
              "defined": {
                "name": "CoordinatorEpochState",
                "generics": [
                  {
                    "kind": "type",
                    "type": {
                      "generic": "T"
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "run_state_start_unix_timestamp",
            "type": "u64"
          },
          {
            "name": "tick",
            "type": "u64"
          },
          {
            "name": "last_tick_unix_timestamp",
            "type": "u64"
          },
          {
            "name": "last_step_unix_timestamp",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "CoordinatorAccount",
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "state",
            "type": {
              "defined": {
                "name": "CoordinatorInstanceState"
              }
            }
          }
        ]
      }
    },
    {
      "name": "CoordinatorConfig",
      "repr": {
        "kind": "c"
      },
      "generics": [
        {
          "kind": "type",
          "name": "I"
        }
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "warmup_time",
            "type": "u64"
          },
          {
            "name": "cooldown_time",
            "type": "u64"
          },
          {
            "name": "max_round_train_time",
            "type": "u64"
          },
          {
            "name": "round_witness_time",
            "type": "u64"
          },
          {
            "name": "min_clients",
            "type": "u16"
          },
          {
            "name": "batches_per_round",
            "type": "u16"
          },
          {
            "name": "data_indicies_per_batch",
            "type": "u16"
          },
          {
            "name": "verification_percent",
            "type": "u8"
          },
          {
            "name": "witness_nodes",
            "type": "u16"
          },
          {
            "name": "witness_quorum",
            "type": "u16"
          },
          {
            "name": "rounds_per_epoch",
            "type": "u32"
          },
          {
            "name": "total_steps",
            "type": "u32"
          },
          {
            "name": "overlapped",
            "type": {
              "defined": {
                "name": "SmallBoolean"
              }
            }
          },
          {
            "name": "checkpointers",
            "type": {
              "defined": {
                "name": "FixedVec",
                "generics": [
                  {
                    "kind": "type",
                    "type": {
                      "generic": "I"
                    }
                  },
                  {
                    "kind": "const",
                    "value": "4"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "CoordinatorEpochState",
      "repr": {
        "kind": "c"
      },
      "generics": [
        {
          "kind": "type",
          "name": "T"
        }
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "rounds",
            "type": {
              "array": [
                {
                  "defined": {
                    "name": "Round"
                  }
                },
                4
              ]
            }
          },
          {
            "name": "clients",
            "type": {
              "defined": {
                "name": "FixedVec",
                "generics": [
                  {
                    "kind": "type",
                    "type": {
                      "defined": {
                        "name": "psyche_coordinator::coordinator::Client",
                        "generics": [
                          {
                            "kind": "type",
                            "type": {
                              "generic": "T"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "kind": "const",
                    "value": "64"
                  }
                ]
              }
            }
          },
          {
            "name": "exited_clients",
            "type": {
              "defined": {
                "name": "FixedVec",
                "generics": [
                  {
                    "kind": "type",
                    "type": {
                      "defined": {
                        "name": "psyche_coordinator::coordinator::Client",
                        "generics": [
                          {
                            "kind": "type",
                            "type": {
                              "generic": "T"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "kind": "const",
                    "value": "64"
                  }
                ]
              }
            }
          },
          {
            "name": "rounds_head",
            "type": "u32"
          },
          {
            "name": "first_round",
            "type": {
              "defined": {
                "name": "SmallBoolean"
              }
            }
          },
          {
            "name": "checkpointed",
            "type": {
              "defined": {
                "name": "SmallBoolean"
              }
            }
          },
          {
            "name": "pause",
            "type": {
              "defined": {
                "name": "SmallBoolean"
              }
            }
          }
        ]
      }
    },
    {
      "name": "CoordinatorInstance",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "account",
            "type": "pubkey"
          },
          {
            "name": "run_id",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "CoordinatorInstanceState",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "coordinator",
            "type": {
              "defined": {
                "name": "Coordinator",
                "generics": [
                  {
                    "kind": "type",
                    "type": {
                      "defined": {
                        "name": "ClientId"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "clients_state",
            "type": {
              "defined": {
                "name": "ClientsState"
              }
            }
          }
        ]
      }
    },
    {
      "name": "CoordinatorProgress",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "epoch",
            "type": "u16"
          },
          {
            "name": "step",
            "type": "u32"
          },
          {
            "name": "epoch_start_data_index",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "CosineLR",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "base_lr",
            "type": "f32"
          },
          {
            "name": "warmup_steps",
            "type": "u32"
          },
          {
            "name": "warmup_init_lr",
            "type": "f32"
          },
          {
            "name": "total_steps",
            "type": "u32"
          },
          {
            "name": "final_lr",
            "type": "f32"
          }
        ]
      }
    },
    {
      "name": "FixedVec",
      "generics": [
        {
          "kind": "type",
          "name": "T"
        },
        {
          "kind": "const",
          "name": "N",
          "type": "usize"
        }
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "data",
            "type": {
              "array": [
                {
                  "generic": "T"
                },
                {
                  "generic": "N"
                }
              ]
            }
          },
          {
            "name": "len",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "HttpTrainingDataLocation",
      "docs": [
        "NOTE: Support for Vecs of URLs is not enabled because of the large size it would support."
      ],
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "SingleUrl",
            "fields": [
              {
                "array": ["u8", 192]
              }
            ]
          },
          {
            "name": "NumberedFiles",
            "fields": [
              {
                "name": "url_template",
                "type": {
                  "array": ["u8", 192]
                }
              },
              {
                "name": "start_index",
                "type": "u32"
              },
              {
                "name": "n_left_pad_zeros",
                "type": "u8"
              },
              {
                "name": "num_files",
                "type": "u32"
              }
            ]
          },
          {
            "name": "Gcp",
            "fields": [
              {
                "name": "bucket_url",
                "type": {
                  "array": ["u8", 192]
                }
              },
              {
                "name": "filter_directory",
                "docs": ["0 len === no filter"],
                "type": {
                  "array": ["u8", 192]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "HubRepo",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "repo_id",
            "type": {
              "array": ["u8", 64]
            }
          },
          {
            "name": "revision",
            "type": {
              "option": {
                "array": ["u8", 64]
              }
            }
          }
        ]
      }
    },
    {
      "name": "LLM",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "architecture",
            "type": {
              "defined": {
                "name": "LLMArchitecture"
              }
            }
          },
          {
            "name": "checkpoint",
            "type": {
              "defined": {
                "name": "Checkpoint"
              }
            }
          },
          {
            "name": "max_seq_len",
            "type": "u32"
          },
          {
            "name": "data_type",
            "type": {
              "defined": {
                "name": "LLMTrainingDataType"
              }
            }
          },
          {
            "name": "data_location",
            "type": {
              "defined": {
                "name": "LLMTrainingDataLocation"
              }
            }
          },
          {
            "name": "lr_schedule",
            "type": {
              "defined": {
                "name": "LearningRateSchedule"
              }
            }
          },
          {
            "name": "optimizer",
            "type": {
              "defined": {
                "name": "Optimizer"
              }
            }
          }
        ]
      }
    },
    {
      "name": "LLMArchitecture",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "HfLlama"
          }
        ]
      }
    },
    {
      "name": "LLMTrainingDataLocation",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Dummy"
          },
          {
            "name": "Server",
            "fields": [
              {
                "array": ["u8", 192]
              }
            ]
          },
          {
            "name": "Local",
            "fields": [
              {
                "array": ["u8", 192]
              }
            ]
          },
          {
            "name": "Http",
            "fields": [
              {
                "name": "location",
                "type": {
                  "defined": {
                    "name": "HttpTrainingDataLocation"
                  }
                }
              },
              {
                "name": "token_size_in_bytes",
                "type": {
                  "defined": {
                    "name": "TokenSize"
                  }
                }
              },
              {
                "name": "shuffle",
                "type": {
                  "defined": {
                    "name": "Shuffle"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "LLMTrainingDataType",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Pretraining"
          },
          {
            "name": "Finetuning"
          }
        ]
      }
    },
    {
      "name": "LearningRateSchedule",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Constant",
            "fields": [
              {
                "defined": {
                  "name": "ConstantLR"
                }
              }
            ]
          },
          {
            "name": "Linear",
            "fields": [
              {
                "defined": {
                  "name": "LinearLR"
                }
              }
            ]
          },
          {
            "name": "Cosine",
            "fields": [
              {
                "defined": {
                  "name": "CosineLR"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "LinearLR",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "base_lr",
            "type": "f32"
          },
          {
            "name": "warmup_steps",
            "type": "u32"
          },
          {
            "name": "warmup_init_lr",
            "type": "f32"
          },
          {
            "name": "total_steps",
            "type": "u32"
          },
          {
            "name": "final_lr",
            "type": "f32"
          }
        ]
      }
    },
    {
      "name": "Model",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "LLM",
            "fields": [
              {
                "defined": {
                  "name": "LLM"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Optimizer",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Dummy"
          },
          {
            "name": "AdamW",
            "fields": [
              {
                "name": "betas",
                "type": {
                  "array": ["f32", 2]
                }
              },
              {
                "name": "weight_decay",
                "type": "f32"
              },
              {
                "name": "eps",
                "type": "f32"
              },
              {
                "name": "clip_grad_norm",
                "type": "f32"
              }
            ]
          },
          {
            "name": "Distro",
            "fields": [
              {
                "name": "clip_grad_norm",
                "type": {
                  "option": "f32"
                }
              },
              {
                "name": "compression_decay",
                "type": "f32"
              },
              {
                "name": "compression_decay_warmup_steps",
                "type": "u32"
              },
              {
                "name": "compression_topk",
                "type": "u16"
              },
              {
                "name": "compression_topk_startup",
                "type": "u16"
              },
              {
                "name": "compression_topk_startup_steps",
                "type": "u32"
              },
              {
                "name": "compression_chunk",
                "type": "u16"
              },
              {
                "name": "quantize_1bit",
                "type": "bool"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Round",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "witnesses",
            "type": {
              "defined": {
                "name": "FixedVec",
                "generics": [
                  {
                    "kind": "type",
                    "type": {
                      "defined": {
                        "name": "Witness"
                      }
                    }
                  },
                  {
                    "kind": "const",
                    "value": "16"
                  }
                ]
              }
            }
          },
          {
            "name": "data_index",
            "type": "u64"
          },
          {
            "name": "random_seed",
            "type": "u64"
          },
          {
            "name": "height",
            "type": "u32"
          },
          {
            "name": "clients_len",
            "type": "u16"
          },
          {
            "name": "tie_breaker_tasks",
            "type": "u16"
          }
        ]
      }
    },
    {
      "name": "RunState",
      "repr": {
        "kind": "rust"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Uninitialized"
          },
          {
            "name": "WaitingForMembers"
          },
          {
            "name": "Warmup"
          },
          {
            "name": "RoundTrain"
          },
          {
            "name": "RoundWitness"
          },
          {
            "name": "Cooldown"
          },
          {
            "name": "Finished"
          },
          {
            "name": "Paused"
          }
        ]
      }
    },
    {
      "name": "Shuffle",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "DontShuffle"
          },
          {
            "name": "Seeded",
            "fields": [
              {
                "array": ["u8", 32]
              }
            ]
          }
        ]
      }
    },
    {
      "name": "SmallBoolean",
      "repr": {
        "kind": "transparent"
      },
      "type": {
        "kind": "struct",
        "fields": ["u8"]
      }
    },
    {
      "name": "TokenSize",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "TwoBytes"
          },
          {
            "name": "FourBytes"
          }
        ]
      }
    },
    {
      "name": "Witness",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "proof",
            "type": {
              "defined": {
                "name": "WitnessProof"
              }
            }
          },
          {
            "name": "participant_bloom",
            "type": {
              "defined": {
                "name": "Bloom16_8",
                "generics": [
                  {
                    "kind": "const",
                    "value": "16"
                  },
                  {
                    "kind": "const",
                    "value": "8"
                  }
                ]
              }
            }
          },
          {
            "name": "order_bloom",
            "type": {
              "defined": {
                "name": "Bloom16_8",
                "generics": [
                  {
                    "kind": "const",
                    "value": "16"
                  },
                  {
                    "kind": "const",
                    "value": "8"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "WitnessProof",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "witness",
            "type": "bool"
          },
          {
            "name": "position",
            "type": "u64"
          },
          {
            "name": "index",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "psyche_coordinator::coordinator::Client",
      "generics": [
        {
          "kind": "type",
          "name": "I"
        }
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "id",
            "type": {
              "generic": "I"
            }
          },
          {
            "name": "state",
            "type": {
              "defined": {
                "name": "ClientState"
              }
            }
          },
          {
            "name": "exited_height",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "psyche_solana_coordinator::client::Client",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "id",
            "type": {
              "defined": {
                "name": "ClientId"
              }
            }
          },
          {
            "name": "staked",
            "type": "u64"
          },
          {
            "name": "earned",
            "type": "u64"
          },
          {
            "name": "slashed",
            "type": "u64"
          },
          {
            "name": "active",
            "type": "u64"
          }
        ]
      }
    }
  ]
}
